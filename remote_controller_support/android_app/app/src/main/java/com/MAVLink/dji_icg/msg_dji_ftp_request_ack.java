/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE DJI_FTP_REQUEST_ACK PACKING
package com.MAVLink.dji_icg;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Answer to the request for file transfer
*/
public class msg_dji_ftp_request_ack extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_DJI_FTP_REQUEST_ACK = 50001;
    public static final int MAVLINK_MSG_ID_DJI_FTP_REQUEST_ACK_CRC = 24;
    public static final int MAVLINK_MSG_LENGTH = 4;
    private static final long serialVersionUID = MAVLINK_MSG_ID_DJI_FTP_REQUEST_ACK;


      
    /**
    * System which requested the command to be executed.
    */
    public short target_system;
      
    /**
    * Id of the file.
    */
    public short file_id;
      
    /**
    * See DJI_FTP_REQUEST_RESULT enum
    */
    public short result;
      
    /**
    * If a file transfer is IN_PROGRESS, this returns the progress in %
    */
    public short progress;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_DJI_FTP_REQUEST_ACK;
        packet.crc_extra = MAVLINK_MSG_ID_DJI_FTP_REQUEST_ACK_CRC;
              
        packet.payload.putUnsignedByte(target_system);
              
        packet.payload.putUnsignedByte(file_id);
              
        packet.payload.putUnsignedByte(result);
              
        packet.payload.putUnsignedByte(progress);
        
        return packet;
    }

    /**
    * Decode a dji_ftp_request_ack message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.target_system = payload.getUnsignedByte();
              
        this.file_id = payload.getUnsignedByte();
              
        this.result = payload.getUnsignedByte();
              
        this.progress = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_dji_ftp_request_ack(){
        msgid = MAVLINK_MSG_ID_DJI_FTP_REQUEST_ACK;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_dji_ftp_request_ack(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_DJI_FTP_REQUEST_ACK;
        unpack(mavLinkPacket.payload);
    }

            
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_DJI_FTP_REQUEST_ACK - sysid:"+sysid+" compid:"+compid+" target_system:"+target_system+" file_id:"+file_id+" result:"+result+" progress:"+progress+"";
    }
}
        